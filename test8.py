# # import random
# #
# # num1 = random.randint(1, 20)
# # num2 = random.randint(1, 8)
# # num3 = random.randint(1, 8)
# # print(num1)
# # print(num2, '+', num3, '=', num2 + num3)
#
# # import random
# #
# # for _ in range(10):
# #     print(random.randint(1, 100))
#
# # import random
# #
# # num = random.randrange(1, 11)
# # print(num)
#
# # import random
# #
# # num = random.randrange(0, 101, 10)
# # print(num)
#
# # import random
# #
# # num = random.random()
# # print(num)
#
# # import random
# #
# # num = random.uniform(1.5, 17)
# # print(num)
#
# # import random
# #
# # random.seed(17)   # явно устанавливаем начальное значение для генератора случайных чисел
# #
# # for _ in range(10):
# #     print(random.randint(1, 100))
#
# ###
#
# # import random
# #
# # num1 = random.randint(1, 6)
# # num2 = random.randint(1, 6)
# #
# # print('Бросаем кубики... ')
# # print('Значения граней:')
# # print(num1)
# # print(num2)
#
# # import random
# #
# # print('Атакуем? y/n')
# # again = input()
# #
# # while again == 'y':
# #
# #     num1 = random.randint(1, 20)
# #     num2 = random.randint(1, 8)
# #     num3 = random.randint(1, 8)
# #
# #     print('Бросаем 1d20!')
# #     print('1d20:', num1)
# #     if num1 >= 16:
# #         print('Ты попадаешь орку в плече своим топором, орк истекает кровью!')
# #         print(f'2d8: {num2} + {num3} = {num2 + num3}')
# #         print(f'Орк получает {num2 + num3} урона!')
# #         print('Атакуем? y/n')
# #         again = input()
# #     else:
# #         print('Атакуем? y/n')
# #         again = input()
#
# #########################################################################################################
#
# # import random
# #
# # print('Атакуем? o/d')
# # again = input()
# #
# # dwarf_hp = 0
# # ork_hp = 0
# #
# # while again == 'o' or again == 'd':
# #
# #     if again == 'o':
# #         mace_THAC0 = random.randint(1, 20)
# #         mace_dmg1 = random.randint(1, 6)
# #         mace_dmg2 = random.randint(1, 6)
# #         mace_dmg3 = random.randint(1, 6)
# #         mace_dmg4 = random.randint(1, 6)
# #         print('Орк атакует!')
# #         print(f'1d20: {mace_THAC0}')
# #         if 13 <= mace_THAC0 <= 19:
# #             print(f'Орк попадает! Удар его палицы наносит {mace_dmg1} + {mace_dmg2}: {mace_dmg1 + mace_dmg2} урона!')
# #             dwarf_hp += (mace_dmg1 + mace_dmg2)
# #             print(f'Всего орк нанес дворфу {dwarf_hp} урона.')
# #             if dwarf_hp >= 31:
# #                 print(f'Дворф погибает от ран, нанесенных орочьей дубиной, не пережив {dwarf_hp} урона.')
# #                 break
# #             print('Дворф атакует!')
# #             again = input()
# #         elif mace_THAC0 == 20:
# #             print(f'Орк наносит критический удар! Сокрушающий удар наносит палицей {mace_dmg1} + {mace_dmg2} + {mace_dmg3} + {mace_dmg4}: {mace_dmg1 + mace_dmg2 + mace_dmg3 + mace_dmg4} урона!!!')
# #             dwarf_hp += (mace_dmg1 + mace_dmg2 + mace_dmg3 + mace_dmg4)
# #             print(f'Всего орк нанес дворфу {dwarf_hp} урона.')
# #             if dwarf_hp >= 31:
# #                 print(f'Дворф погибает от ран, нанесенных орочьей дубиной, не пережив {dwarf_hp} урона.')
# #                 break
# #             print('Дворф атакует! o/d')
# #             again = input()
# #         else:
# #             print('Дворф блокирует удар своим щитом!')
# #             print('Дворф атакует! o/d')
# #             again = input()
# #
# #     if again == 'd':
# #         axe_THAC0 = random.randint(1, 20)
# #         axe_dmg = random.randint(1, 8)
# #         axe_dmg2 = random.randint(1, 8)
# #         print('Дворф атакует!')
# #         print(f'1d20: {axe_THAC0}')
# #         if 10 <= axe_THAC0 <= 19:
# #             print(f'Дворф попадает! Удар его секиры наносит {axe_dmg} урона!')
# #             ork_hp += (axe_dmg)
# #             print(f'Всего дворф нанес орку {ork_hp} урона.')
# #             if ork_hp >= 41:
# #                 print(f'Орк погибает от ран, нанесенных секирой дворфа, не пережив {ork_hp} урона.')
# #                 break
# #             print('Орк атакует! o/d')
# #             again = input()
# #         elif axe_THAC0 == 20:
# #             print(f'Дворф наносит критический удар! Сокрушающий удар секирой наносит {axe_dmg} + {axe_dmg2}: {axe_dmg + axe_dmg2} урона!!!')
# #             ork_hp += (axe_dmg + axe_dmg2)
# #             print(f'Всего дворф нанес орку {ork_hp} урона.')
# #             if ork_hp >= 41:
# #                 print(f'Орк погибает от ран, нанесенных секирой дворфа, не пережив {ork_hp} урона.')
# #                 break
# #             print('Орк атакует! o/d')
# #             again = input()
# #         else:
# #             print('Орк уворачивается от удара!')
# #             print('Орк атакует! o/d')
# #             again = input()
#
# #########################################################################################################
#
# # import random
# #
# # numbers = [1, 2, 3, 4, 5, 6, 7, 8]
# # random.shuffle(numbers)
# # print(numbers)
#
# # import random
# #
# # print(random.choice('BEEGEEK'))
# # print(random.choice([1, 2, 3, 4]))
# # print(random.choice(['a', 'b', 'c', 'd']))
#
# # import random
# #
# # numbers = [2, 5, 8, 9, 12]
# #
# # print(random.sample(numbers, 1))
# # print(random.sample(numbers, 2))
# # print(random.sample(numbers, 3))
# # print(random.sample(numbers, 5))
#
# # import random
# #
# # numbers = list(range(2, 10, 2)) + [3]
# # num = random.choice(numbers)
# # print(num)
#
# # import random
# #
# # d6 = random.randint(1, 6)
# # d8 = random.randint(1, 8)
# # d12_1 = random.randint(1, 12)
# # d12_2 = random.randint(1, 12)
# #
# # print(d6)
# # if d6 > 3:
# #     print('d8 завжди однакові')
# #     print(f'd8 + d8: {d8} + {d8} = {d8 + d8}')
# # else:
# #     print('d12 переважно різні, бо _1 і _2')
# #     print(f'd12_1 + d12_2: {d12_1} + {d12_2} = {d12_1 + d12_2}')
#
#
# # def d6_x2_or_d12():
# #     d6_count = 0
# #     d12_count = 0
# #
# #     for i in range(1, 3000000):
# #         import random
# #         one_d6 = random.randint(1, 6)
# #         two_d6 = random.randint(1, 6)
# #         d6_count += (one_d6 + two_d6)
# #
# #
# #     for j in range(1, 3000000):
# #         import random
# #         one_d12 = random.randint(1, 12)
# #         d12_count += one_d12
# #
# #     return ('2d6:', d6_count, '###', '1d12:', d12_count)
# #
# #
# # for k in range(1, 11):
# #     print(*(d6_x2_or_d12()))
#
# # import random
#
# # d6_count = 0
# # d12_count = 0
#
# # n = random.randint(1, 2)
# # ncnt = 0
#
# # one_d6 = random.randint(1, 6)
# # two_d6 = random.randint(1, 6)
# #
# #
# #
# # for i in range(1, 50):
# #     d6_count += one_d6
# #     d6_count += two_d6
# #     ncnt += n
#
#
# # for j in range(1, 50):
# #     import random
# #     one_d12 = random.randint(1, 12)
# #     d12_count += one_d12
# #
# #
# #
# # # print(d6_count)
# # print()
# # print(d12_count)
#
# #
# # import random
# # random.seed()
# #
# # def d6_x2_or_d12():
# #     d6_count = 0
# #     d12_count = 0
# #
# #     for i in range(1, 3000000):
# #         one_d6 = random.randint(1, 6)
# #         two_d6 = random.randint(1, 6)
# #         d6_count += (one_d6 + two_d6)
# #
# #
# #     for j in range(1, 3000000):
# #         one_d12 = random.randint(1, 12)
# #         d12_count += one_d12
# #
# #     return ('2d6:', d6_count, '###', '1d12:', d12_count)
# #
# #
# # for k in range(1, 11):
# #     print(*(d6_x2_or_d12()))
#
# # 9223372036854775807
# # и
# # 9223372036854775807
#
# # n = ((9223372036854775807 * 9223372036854775807) ** 2)
# # print(n * n * n * n * n)
#
# import random
# random.seed()
#
# def d6():  # прогоняем 2d6 3000000 раз
#     d6_count = 0
#
#     for i in range(1, 3000000):
#         one_d6 = random.randint(1, 6)
#         two_d6 = random.randint(1, 6)
#         d6_count += (one_d6 + two_d6)
#
#     return d6_count
#
#
# def d12():  # прогоняем 1d12 3000000 раз
#     d12_count = 0
#
#     for j in range(1, 3000000):
#         one_d12 = random.randint(2, 12)
#         d12_count += one_d12
#     return d12_count
#
# d6_summ = 0
# for i in range(10):
#     d6_summ += d6()
# print(f'2d6:  {d6_summ}')  # суммируем 2d6, 3000000 раз * 10 результатов
#
# d12_summ = 0
# for j in range(10):
#     d12_summ += d12()
# print(f'1d12: {d12_summ}')  # суммируем 1d12, 3000000 раз * 10 результатов
#
# rez_d6 = round(d6_summ / d12_summ * 100 - 100, 2)  # округляем до двух знаков после запятой
# rez_d12 = round(d12_summ / d6_summ * 100 - 100, 2)  # округляем до двух знаков после запятой
#
# if d6_summ > d12_summ:  #
#     print(f'2d6 на большой дистанции выдает больше, чем 1d12 на {rez_d6}%')
#     print('')
# elif d12_summ > d6_summ:  #
#     print(f'1d12 на большой дистанции выдает больше, чем 2d6 на {rez_d12}%')
# print('Пщ Пщ')

# b = int(input())
# m = int(input())
# print(b / m * 100 - 100, " -100")
# print(b / m * 100)

# import random  # Угадайка чисел
#
# rndm = random.randint(1, 99)
# # print(rndm)
# print('Игра "Угадайка чисел"')
# flag = False
# while not flag:
#     n = int(input('Укажите число от 1 до 99:\n'))
#     if rndm > n:
#         print('Слишком мало, попробуйте еще раз')
#         flag = False
#     elif rndm < n:
#         print('Слишком много, попробуйте еще раз')
#         flag = False
#     else:
#         print('Вы угадали, поздравляем!')
#         flag = True
#         break

# import random  # Оптимальная стратегия угадывания числа (((
# random.seed()
#
# def dig():
#
#     left = 1
#
#     right = r
#     rndm = random.randint(left, right)
#
#     middle = (left + right) // 2
#     flag = False
#     count = 0
#
#     while not flag:
#         print(rndm)
#         if middle < rndm:
#             left = middle + 1
#             middle = (left + right) // 2
#             count += 1
#         elif middle > rndm:
#             right = middle - 1
#             middle = (left + right) // 2
#             count += 1
#         else:
#             count += 1
#             break
#     return count
#
# r = int(input())
# n = 0
# s = 0
# for i in range(10):
#     if n >= s:
#         s = n
#         n = dig()
#         print(s)
#
# print(s)

# import random  # Оптимальная стратегия угадывания числа
#
# n = int(input())
# import math
# rndm = random.randint(1, n)
# count = math.log2(n)
# print(math.ceil(count))

# import random  # Угадайка
#
# l = int(input())  # укажи число от 1 до l
# rndm = random.randint(1, l)
# print('Добро пожаловать в числовую угадайку')
# count = 0
#
# def is_valid(s):
#     return s.isdigit() and 0 < int(s) <= 100
#
# flag = False
# while not flag:
#     s = input(f'Укажите число от 1 до {l}\n')
#     if is_valid(s) == False:
#         print(f'А может быть все-таки введем целое число от 1 до {l}?')
#     elif is_valid(s):
#         s = int(s)
#         count += 1
#         if s < rndm:
#             print('Ваше число меньше загаданного, попробуйте еще разок')
#         elif s > rndm:
#             print('Ваше число больше загаданного, попробуйте еще разок')
#         else:
#             print('Вы угадали, поздравляем!')
#             print(f'Вы справились за {count} попыток.')
#             print('Спасибо, что играли в числовую угадайку. Еще увидимся...')
#             q = input('Сыграем еще? y/n\n')
#             if q == 'y':
#                 flag = False
#             else:
#                 print('Нет так нет...')
#                 break

# import random  # Магический шар 8
#
# answers = ["Бесспорно", "Предрешено", "Никаких сомнений", "Определённо да", "Можешь быть уверен в этом", "Мне кажется - да", "Вероятнее всего", "Хорошие перспективы", "Знаки говорят - да", "Да", "Пока неясно, попробуй снова", "Спроси позже", "Лучше не рассказывать", "Сейчас нельзя предсказать", "Сконцентрируйся и спроси опять", "Даже не думай", "Мой ответ - нет", "По моим данным - нет", "Перспективы не очень хорошие", "Весьма сомнительно"]
#
# print('Привет Мир, я магический шар, и я знаю ответ на любой твой вопрос.')
# name = input('Как тебя зовут?\n')
# print(f'Привет, {name}!')
#
# flag = False
#
# while not flag:
#     question = input(f'Задай свой вопрос, {name}, ответить на который можно "да" или "нет"\n')
#     print(*[random.choice(answers)])
#     answer = input(f'Хочешь ли ты задать еще один вопрос, {name}? (y/n)\n')
#     if answer == 'y':
#          flag = False
#     elif answer == "n":
#          print('Возвращайся если возникнут вопросы!')
#          flag = True
#     else:
#         answer = input(f'Хочешь ли ты задать еще один вопрос, {name}? Выбери (y/n)\n')
#         if answer != 'y':
#             print('Возвращайся если возникнут вопросы!')
#             flag = True


  # Генератор безопасных паролей

# import random

# digits = '0123456789'
# lowercase_letters = 'abcdefghijklmnopqrstuvwxyz'
# uppercase_letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
# punctuation = '!#$%&*+-=?@^_'
# chars = ''
#
# pw_quantity = int(input('Сколько паролей сгенерировать?\n'))
# pw_len = int(input('Сколько символов должен содержать пароль?\n'))
# pw_dig = input('Должен ли пароль содержать цифры? (y/n)\n')
# pw_upp = input('Должен ли пароль содержать прописные буквы ABCDEFGHIJKLMNOPQRSTUVWXYZ? (y/n)\n')
# pw_low = input('Должен ли пароль содержать строчные буквы abcdefghijklmnopqrstuvwxyz? (y/n)\n')
# pw_punc = input('Должен ли пароль содержать символы "!#$%&*+-=?@^_"? (y/n)\n')
#
# if pw_dig == 'y':
#     chars += digits
# if pw_upp == 'y':
#     chars += uppercase_letters
# if pw_low == 'y':
#     chars += lowercase_letters
# if pw_punc == 'y':
#     chars += punctuation

# import random
# def generate_password(pw_quantity, pw_len):
#     digits = '0123456789'
#     lowercase_letters = 'abcdefghijklmnopqrstuvwxyz'
#     uppercase_letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
#     punctuation = '!#$%&*+-=?@^_'
#     chars = ''
#
#     # pw_quantity = int(input('Сколько паролей сгенерировать?\n'))
#     pw_len = int(input('Сколько символов должен содержать пароль?\n'))
#     pw_dig = input('Должен ли пароль содержать цифры? (y/n)\n')
#     pw_upp = input('Должен ли пароль содержать прописные буквы ABCDEFGHIJKLMNOPQRSTUVWXYZ? (y/n)\n')
#     pw_low = input('Должен ли пароль содержать строчные буквы abcdefghijklmnopqrstuvwxyz? (y/n)\n')
#     pw_punc = input('Должен ли пароль содержать символы "!#$%&*+-=?@^_"? (y/n)\n')
#
#     pswrd = ''
#
#     if pw_dig == 'y':
#         chars += digits
#     if pw_upp == 'y':
#         chars += uppercase_letters
#     if pw_low == 'y':
#         chars += lowercase_letters
#     if pw_punc == 'y':
#         chars += punctuation
#
#     for i in range(pw_len):
#         pswrd += random.choice(chars)
#     return pswrd
#
#
# pw_quantity = int(input('Сколько паролей сгенерировать?\n'))
# pw_len = int(input('Сколько символов должен содержать пароль?\n'))
#
# for j in range(3):
#     print(generate_password(pw_quantity, pw_len))

# import random
#
# def password():
#     chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&*+-=?@^_'
#     pswrd = ''
#     for i in range(12):
#
#         pswrd += random.choice(chars)
#         # random.shuffle(pswrd)
#     return pswrd
#
# for i in range(10):
#     print(password())

# n = int(input())
# print(n)

# import mymodule
# mymodule.password()

# import random
#
# def qwerty():
#     n = random.randint(1, 6)
#     flag = True
#     if n <=3:
#         flag = True
#         return 'кверти'
#     else:
#         return 'пщ пщ'
#
#
# print(qwerty())



# from mymodule import qwerty, password
#
# for j in range(10):
#     print(password())

# rus_low = "абвгдежзийклмнопрстуфхцчшщъыьэюя"
# rus_up = "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ"
# eng_low = 'abcdefghijklmnopqrstuvwxyz'
# eng_upp = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
# symbol = '!@#$%^&*()-_+=}{[]\~`<>,./?}{: "'
#
# n_d = input('Если нужно зашифровать текст, нажми "+", если нужно дешифровать текст, нажми "-" \n')
# n_l = input('Выберите язык алфавита: русский - нажмите "r", английский - нажмите "e" \n')
# rot = int(input('Выбери шаг сдвига, вправо \n'))  # циклический сдвиг
# f = input('Введите фразу \n')
#
# n = 0  # кол-во букв: ру 32, англ 25
# if n_l == 'r':
#     n = 32
# elif n_l == 'e':
#     n = 26  # чому 26?
#
# text = []
#
# if n_d == '-':  # если ДЕшифруем
#     rot = -rot
# #  неизвестный text = (f + rot) % n
# for i in range(len(f)):
#     if f[i].isalpha():
#         if f[i] == f[i].upper():
#             for j in range(n):
#                 if n == 32:
#                     if f[i] == rus_up[j]:
#                         # text.extend([rus_up[(j + rot) % n]])
#                         print(*[rus_up[(j + rot) % n]], end='')
#                 elif n == 26: # !!!! 26 !!!!
#                     if f[i] == eng_upp[j]:
#                         # text.extend([eng_upp[(j + rot) % n]])
#                         print(*[eng_upp[(j + rot) % n]], end='')
#         elif f[i] == f[i].lower():
#             for j in range(n):
#                 if n == 32:
#                     if f[i] == rus_low[j]:
#                         # text.extend([rus_low[(j + rot) % n]])
#                         print(*[rus_low[(j + rot) % n]], end='')
#                 elif n == 26:
#                     if f[i] == eng_low[j]:
#                         # text.extend([eng_low[(j + rot) % n]])
#                         print(*[eng_low[(j + rot) % n]], end='')
#     else:
#         text.extend(f[i])
#         print(f[i], end='')


################

# import random
# random.seed()
#
# def d6():
#
#     # print('Больше 7, коэф. 2.3, 1млн бросков')
#     # print('Выирал: 8, 9, 10, 11, 12')
#     # print('Проиграл: 1, 2, 3, 4, 5, 6, 7')
#     # print('Банк: 2000')
#
#     bank = 2000
#
#     rezult_2 = 0
#     rezult_3 = 0
#     rezult_4 = 0
#     rezult_5 = 0
#     rezult_6 = 0
#     rezult_7 = 0
#     rezult_8 = 0
#     rezult_9 = 0
#     rezult_10 = 0
#     rezult_11 = 0
#     rezult_12 = 0
#
#
#
#     for i in range(100000):
#         n1 = random.randint(1, 6)
#         n2 = random.randint(1, 6)
#         n = n1 + n2
#         if n == 2:
#             bank -= 2
#             rezult_2 += 1
#
#         if n == 3:
#             bank -= 2
#             rezult_3 += 1
#
#         if n == 4:
#             bank -= 2
#             rezult_4 += 1
#
#         if n == 5:
#             bank -= 2
#             rezult_5 += 1
#
#         if n == 6:
#             bank -= 2
#             rezult_6 += 1
#
#         if n == 7:
#             bank -= 2
#             rezult_7 += 1
#
#         if n == 8:
#             bank += 2.599
#             rezult_8 += 1
#
#         if n == 9:
#             bank += 2.599
#             rezult_9 += 1
#
#         if n == 10:
#             bank += 2.599
#             rezult_10 += 1
#
#         if n == 11:
#             bank += 2.599
#             rezult_11 += 1
#
#         if n == 12:
#             bank += 2.599
#             rezult_12 += 1
#
#
#     # print(f'Результат броска 2d6 = 2: {rezult_2}')
#     # print(f'Результат броска 2d6 = 3: {rezult_3}')
#     # print(f'Результат броска 2d6 = 4: {rezult_4}')
#     # print(f'Результат броска 2d6 = 5: {rezult_5}')
#     # print(f'Результат броска 2d6 = 6: {rezult_6}')
#     # print(f'Результат броска 2d6 = 7: {rezult_7}')
#     # print(f'Результат броска 2d6 = 8: {rezult_8}')
#     # print(f'Результат броска 2d6 = 9: {rezult_9}')
#     # print(f'Результат броска 2d6 = 10: {rezult_10}')
#     # print(f'Результат броска 2d6 = 11: {rezult_11}')
#     # print(f'Результат броска 2d6 = 12: {rezult_12}')
#     # print()
#     bank = round(bank, 2)
#     print(f'Банк в итоге равен: {bank}')
#
#
#     # print(f'2.3: {2 * 2.3}, 7 больше или меньше 7')
#     # print(f'1.65: {2 * 1.65}, больше 6')
#
# print('Больше 7, коэф. 2.3 (+ 2.6 грн), 1млн бросков')
# print('Выирал: 8, 9, 10, 11, 12')
# print('Проиграл: 1, 2, 3, 4, 5, 6, 7')
# print('Банк: 2000')
#
# n = int(input('Укажи кол-во итераций \n'))
# for i in range(n):
#     d6()

# i = 5
# i += 1
# i += 1
# print(i)

# n = sorted([6, -2, 2, -7])
#
# a = [6, -2, 2, -7]
# a.sort()
#
# print(n)
# print(a)

# print([6, -2, 2, -7].sort())

# s = sorted(['6','-2','2','-7'])
# n = ['6','-2','2','-7']
# n.sort()
#
# print(s)
# print(n)

# import math  # сердечко
# import turtle
#
# def xt(t):
#     return 16 * math.sin(t) ** 3
#
# def yt(t):
#     return 13 * math.cos(t) - 5 * math.cos(2 * t) - 2 * math.cos(3 * t) - math.cos(4 * t)
#
#
# t = turtle.Turtle()
# t.speed(500)
# turtle.colormode(255)
# turtle.Screen().bgcolor(0, 0, 0)
# for i in range(2550):
#     t.goto((xt(i) * 20, yt(i) * 20))
#     t.pencolor((255 - i) % 255, i % 255, (255 + i) // 2 % 255)
#     t.goto(0, 0)
#
# t.hideturtle()
# turtle.update()
# turtle.mainloop()


# rus_low = "абвгдежзийклмнопрстуфхцчшщъыьэюя"
# rus_up = "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ"
# eng_low = 'abcdefghijklmnopqrstuvwxyz'
# eng_upp = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
# symbol = '!@#$%^&*()-_+=}{[]\~`<>,./?}{: "'

# n_d = input('Если нужно зашифровать текст, нажми "+", если нужно дешифровать текст, нажми "-" \n')
# n_l = input('Выберите язык алфавита: русский - нажмите "r", английский - нажмите "e" \n')
# rot = int(input('Выбери шаг сдвига, вправо \n'))  # циклический сдвиг
# f = input('Введите фразу \n')
#
# n = 0  # кол-во букв: ру 32, англ 25
# if n_l == 'r':
#     n = 32
# elif n_l == 'e':
#     n = 26  # чому 26?
#
# text = []
#
# if n_d == '-':  # если ДЕшифруем
#     rot = -rot
# #  неизвестный text = (f + rot) % n
# for i in range(len(f)):
#     if f[i].isalpha():
#         if f[i] == f[i].upper():
#             for j in range(n):
#                 if n == 32:
#                     if f[i] == rus_up[j]:
#                         # text.extend([rus_up[(j + rot) % n]])
#                         print(*[rus_up[(j + rot) % n]], end='')
#                 elif n == 26: # !!!! 26 !!!!
#                     if f[i] == eng_upp[j]:
#                         # text.extend([eng_upp[(j + rot) % n]])
#                         print(*[eng_upp[(j + rot) % n]], end='')
#         elif f[i] == f[i].lower():
#             for j in range(n):
#                 if n == 32:
#                     if f[i] == rus_low[j]:
#                         # text.extend([rus_low[(j + rot) % n]])
#                         print(*[rus_low[(j + rot) % n]], end='')
#                 elif n == 26:
#                     if f[i] == eng_low[j]:
#                         # text.extend([eng_low[(j + rot) % n]])
#                         print(*[eng_low[(j + rot) % n]], end='')
#     else:
#         text.extend(f[i])
#         print(f[i], end='')


# len_s = []
# f = input('Введите фразу \n').split()
# s = ' '.join(f)
#
# # f = [str(i) for i in f]
# # print(f)
# rus_low = "абвгдежзийклмнопрстуфхцчшщъыьэюя"
# rus_up = "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ"
# eng_low = 'abcdefghijklmnopqrstuvwxyz'
# eng_upp = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
# symbol = '!@#$%^&*()-_+=}{[]\~`<>,./?}{: "'
#
# n_d = input('Если нужно зашифровать текст, нажми "+", если нужно дешифровать текст, нажми "-" \n')
# n_l = input('Выберите язык алфавита: русский - нажмите "r", английский - нажмите "e" \n')
# rot = len_s
#
# n = 0  # кол-во букв: ру 32, англ 25
# if n_l == 'r':
#     n = 32
# elif n_l == 'e':
#     n = 26  # чому 26?
#
# for a in range(len(f)):
#     count = 0  # количество символов в каждом слове
#     for b in f[a]:
#         for c in b:
#             if c.isalpha():
#                 count += 1
#     len_s.append(count)
#     # print(count)
# # print(s)
# # print(len_s)
#
#
#
#     len_s.append(count)
#     for i in range(len(f)):
#         if s[i].isalpha():
#             if s[i] == s[i].upper():
#                 for j in range(n):
#                     if n == 32:
#                         if s[i] == rus_up[j]:
#                             # text.extend([rus_up[(j + rot) % n]])
#                             print(*[rus_up[(j + rot) % n]], end='')
#                     elif n == 26:  # !!!! 26 !!!!
#                         if s[i] == eng_upp[j]:
#                             # text.extend([eng_upp[(j + rot) % n]])
#                             print(*[eng_upp[(j + rot) % n]], end='')
#             elif s[i] == s[i].lower():
#                 for j in range(n):
#                     if n == 32:
#                         if s[i] == rus_low[j]:
#                             # text.extend([rus_low[(j + rot) % n]])
#                             print(*[rus_low[(j + rot) % n]], end='')
#                     elif n == 26:
#                         if s[i] == eng_low[j]:
#                             # text.extend([eng_low[(j + rot) % n]])
#                             print(*[eng_low[(j + rot) % n]], end='')
#         else:
#             # text.extend(f[i])
#             print(s[i], end='')



# n = input()
# # ищем длину слов переводим в словарь в виде чисел
# s = n
# for j in n:
#     if j in '*,.!@"-':
#         s = s.replace(j, '')
# g = [len(i) for i in s.split()]
# print(s)
# print(g)

# n = ['loh', 2, 3.6, '54']
# print(n)

# n = input()  # x в десятичный
# # print(int(n, 16))
# l = int(n, 9)
# print(l)
# print()
# # 32 22 16 17
# a = input()
# b = input()
# c = input()
# d = input()
#
# s = int(a, 9) + int(b, 9) + int(c, 9) + int(d, 9)
# print(s)

# n=int(input("Начальное число:\n"))
# m=int(input("В какую систему переводим:\n"))
# s=""
# vol=[0,1,2,3,4,5,6,7,8,9,"A","B","C","D","E","F"] # Это код из десятичной в любую
# while n!=0:
#     ch=n%m
#     s=str(vol[ch])+s
#     n//=m
# print(s)

# print(62 // 4)

# from mymodule import password
#
# for i in range(10):
#     print(password())

# n = int(input("Начальное число:\n"))  # Из десятичной в любую (до 16)
# m = int(input("В какую систему переводим:\n"))
# s = ""
# vol = [0,1,2,3,4,5,6,7,8,9,"A","B","C","D","E","F"]
#
# while n != 0:
#     ch = n % m
#     s = str(vol[ch]) + s
#     n //= m
# print(s)

# print(bin(128))  # 2
# print(oct(128))  # 8
# print(hex(128))  # 16
#
# num = 127432
#
# hex_num = hex(num)          # 0x1f1c8
# print(hex_num[2:].upper())  # 1F1C8
#
# num = 127
#
# bin_num = bin(num)  # 0b1111111
# oct_num = oct(num)  # 0o177
# hex_num = hex(num)  # 0x7f
#
# print(bin_num[2:])  # 1111111
# print(oct_num[2:])  # 177
# print(hex_num[2:])  # 7f

# n = int(input())  # BOH
# bin_n = bin(n)
# oct_n = oct(n)
# hex_n = hex(n)
#
# print(bin_n[2:])
# print(oct_n[2:])
# print(hex_n[2:].upper())

# import random
#
# word_list = ['год', 'человек', 'время', 'дело', 'жизнь', 'день', 'рука', 'раз', 'работа', 'слово', 'место', 'лицо',
#             'друг', 'глаз', 'вопрос', 'дом', 'сторона', 'страна', 'мир', 'случай', 'голова', 'ребенок', 'сила', 'конец',
#             'вид', 'система', 'часть', 'город', 'отношение', 'женщина', 'деньги', 'земля', 'машина', 'вода', 'отец',
#             'проблема', 'час', 'право', 'нога', 'решение', 'дверь', 'образ', 'история', 'власть', 'закон', 'война',
#             'бог', 'голос', 'тысяча', 'книга', 'возможность', 'результат', 'ночь', 'стол', 'имя', 'область', 'статья',
#             'число', 'компания', 'народ', 'жена', 'группа', 'развитие', 'процесс', 'суд', 'условие', 'средство',
#             'начало', 'свет', 'пора', 'путь', 'душа', 'уровень', 'форма', 'связь', 'минута', 'улица', 'вечер',
#             'качество', 'мысль', 'дорога', 'мать', 'действие', 'месяц', 'государство', 'язык', 'любовь', 'взгляд',
#             'мама', 'век', 'школа', 'цель', 'общество', 'деятельность', 'организация', 'президент', 'комната',
#             'порядок', 'момент', 'театр', 'письмо', 'утро', 'помощь', 'ситуация', 'роль', 'рубль', 'смысл', 'состояние',
#             'квартира', 'орган', 'внимание', 'тело', 'труд', 'сын', 'мера', 'смерть', 'рынок', 'программа', 'задача',
#             'предприятие', 'окно', 'разговор', 'правительство', 'семья', 'производство', 'информация', 'положение',
#             'центр', 'ответ', 'муж', 'автор', 'стена', 'интерес', 'федерация', 'правило', 'управление', 'мужчина',
#             'идея', 'партия', 'совет', 'счет', 'сердце', 'движение', 'вещь', 'материал', 'неделя', 'чувство', 'глава',
#             'наука', 'ряд', 'газета', 'причина', 'плечо', 'цена', 'план', 'речь', 'точка', 'основа', 'товарищ',
#             'культура', 'данные', 'мнение', 'документ', 'институт', 'ход', 'проект', 'встреча', 'директор', 'срок',
#             'палец', 'опыт', 'служба', 'судьба', 'девушка', 'очередь', 'лес', 'состав', 'член', 'количество', 'событие',
#             'объект', 'зал', 'создание', 'значение', 'период', 'шаг', 'брат', 'искусство', 'структура', 'номер',
#             'пример', 'исследование', 'гражданин', 'игра', 'начальник', 'рост', 'тема', 'принцип', 'метод', 'тип',
#             'фильм', 'край', 'гость', 'воздух', 'характер', 'борьба', 'использование', 'размер', 'образование',
#             'мальчик', 'кровь', 'район', 'небо', 'армия', 'класс', 'представитель', 'участие', 'девочка', 'политика',
#             'герой', 'картина', 'доллар', 'спина', 'территория', 'пол', 'поле', 'изменение', 'направление', 'рисунок',
#             'течение', 'церковь', 'банк', 'сцена', 'население', 'большинство', 'музыка', 'правда', 'свобода', 'память',
#             'команда', 'союз', 'врач', 'договор', 'дерево', 'факт', 'хозяин', 'природа', 'угол', 'телефон', 'позиция',
#             'двор', 'писатель', 'самолет', 'объем', 'род', 'солнце', 'вера', 'берег', 'спектакль', 'фирма', 'способ',
#             'завод', 'цвет', 'журнал', 'руководитель', 'специалист', 'оценка', 'регион', 'песня', 'процент', 'родитель',
#             'море', 'требование', 'основание', 'половина', 'роман', 'круг', 'анализ', 'стихи', 'автомобиль',
#             'экономика', 'литература', 'бумага', 'поэт', 'степень', 'господин', 'надежда', 'предмет', 'вариант',
#             'министр', 'граница', 'дух', 'модель', 'операция', 'пара', 'сон', 'название', 'ум', 'повод', 'старик',
#             'миллион', 'успех', 'счастье', 'ребята', 'кабинет', 'магазин', 'пространство', 'выход', 'удар', 'база',
#             'знание', 'текст', 'защита', 'руководство', 'площадь', 'сознание', 'возраст', 'участник', 'участок',
#             'пункт', 'линия', 'желание', 'папа', 'доктор', 'губа', 'дочь', 'среда', 'председатель', 'представление',
#             'солдат', 'художник', 'волос', 'оружие', 'соответствие', 'ветер', 'парень', 'зрение', 'генерал', 'огонь',
#             'понятие', 'строительство', 'ухо', 'грудь', 'нос', 'страх', 'услуга', 'содержание', 'радость',
#             'безопасность', 'продукт', 'комплекс', 'бизнес', 'сад', 'сотрудник', 'лето', 'курс', 'предложение', 'рот',
#             'технология', 'реформа', 'отсутствие', 'собака', 'камень', 'будущее', 'рассказ', 'контроль', 'река',
#             'продукция', 'сумма', 'техника', 'здание', 'сфера', 'необходимость', 'фонд', 'подготовка', 'лист',
#             'республика', 'хозяйство', 'воля', 'бюджет', 'снег', 'деревня', 'мужик', 'элемент', 'обстоятельство',
#             'немец', 'победа', 'источник', 'звезда', 'выбор', 'масса', 'итог', 'сестра', 'практика', 'проведение',
#             'карман', 'слава', 'кухня', 'определение', 'функция', 'войско', 'комиссия', 'применение', 'капитан',
#             'работник', 'обеспечение', 'офицер', 'фамилия', 'предел', 'выборы', 'ученый', 'бутылка', 'бой', 'теория',
#             'зона', 'отдел', 'зуб', 'разработка', 'личность', 'гора', 'товар', 'метр', 'праздник', 'влияние',
#             'читатель', 'удовольствие', 'актер', 'слеза', 'ответственность', 'учитель', 'акт', 'боль', 'множество',
#             'особенность', 'показатель', 'корабль', 'звук', 'впечатление', 'частность', 'детство', 'вывод', 'профессор',
#             'доля', 'норма', 'прошлое', 'командир', 'коридор', 'поддержка', 'рамка', 'враг', 'этап', 'черт', 'дед',
#             'собрание', 'прием', 'болезнь', 'клетка', 'кожа', 'заявление', 'попытка', 'сравнение', 'расчет', 'депутат',
#             'комитет', 'знак', 'дядя', 'учет', 'хлеб', 'чай', 'режим', 'целое', 'вирус', 'выражение', 'здоровье',
#             'зима', 'десяток', 'глубина', 'сеть', 'студент', 'секунда', 'скорость', 'поиск', 'суть', 'налог', 'ошибка',
#             'доход', 'режиссер', 'поверхность', 'ощущение', 'карта', 'клуб', 'станция', 'революция', 'колено',
#             'министерство', 'стекло', 'этаж', 'высота', 'бабушка', 'трубка', 'газ', 'мастер', 'поведение', 'столица',
#             'механизм', 'передача', 'способность', 'подход', 'энергия', 'существование', 'исполнение', 'кино',
#             'сожаление', 'заместитель', 'ресурс', 'акция', 'рождение', 'администрация', 'стоимость', 'улыбка', 'артист',
#             'сосед', 'фраза', 'фигура', 'субъект', 'реакция', 'список', 'фотография', 'журналист', 'май', 'нарушение',
#             'заседание', 'толпа', 'больница', 'существо', 'свойство', 'долг', 'поколение', 'животное', 'схема',
#             'усилие', 'отличие', 'остров', 'противник', 'волна', 'реализация', 'страница', 'формирование', 'житель',
#             'красота', 'птица', 'растение', 'тень', 'явление', 'храм', 'запах', 'водка', 'наличие', 'ужас', 'одежда',
#             'кресло', 'больной', 'поезд', 'университет', 'традиция', 'адрес', 'декабрь', 'ладонь', 'сведение', 'цветок',
#             'лидер', 'октябрь', 'занятие', 'сентябрь', 'помещение', 'январь', 'зритель', 'редакция', 'стиль', 'весна',
#             'фактор', 'август', 'известие', 'зависимость', 'охрана', 'оборудование', 'концерт', 'отделение', 'расход',
#             'выставка', 'милиция', 'переход', 'эпоха', 'запад', 'произведение', 'родина', 'собственность', 'тайна',
#             'трава', 'лагерь', 'имущество', 'кровать', 'аппарат', 'середина', 'март', 'клиент', 'дама', 'фронт',
#             'отрасль', 'стул', 'беседа', 'законодательство', 'продажа', 'повышение', 'музей', 'след', 'полковник',
#             'сомнение', 'понимание', 'апрель', 'князь', 'рыба', 'дума', 'кодекс', 'сутки', 'чудо', 'шея', 'судья',
#             'крыша', 'настроение', 'поток', 'должность', 'преступление', 'мозг', 'честь', 'пост', 'еврей', 'июнь',
#             'сотня', 'дождь', 'лестница', 'дача', 'установка', 'появление', 'получение', 'образец', 'труба', 'главное',
#             'осень', 'костюм', 'баба', 'ценность', 'обязанность', 'пьеса', 'таблица', 'вино', 'воспоминание', 'лошадь',
#             'коллега', 'организм', 'ученик', 'учреждение', 'открытие', 'том', 'черта', 'характеристика', 'выполнение',
#             'оборона', 'выступление', 'температура', 'перспектива', 'подруга', 'приказ', 'жертва', 'ресторан',
#             'километр', 'спор', 'вкус', 'признак', 'промышленность', 'американец', 'лоб', 'заключение', 'восток',
#             'исключение', 'ключ', 'постановление', 'слой', 'бок', 'июль', 'перевод', 'секретарь', 'кусок', 'слух',
#             'польза', 'звонок', 'обстановка', 'чиновник', 'соглашение', 'деталь', 'русский', 'тишина', 'зарплата',
#             'билет', 'подарок', 'тюрьма', 'ящик', 'конкурс', 'книжка', 'изучение', 'просьба', 'царь', 'публика', 'смех',
#             'сообщение', 'угроза', 'беда', 'блок', 'достижение', 'назначение', 'реклама', 'портрет', 'масло', 'стакан',
#             'урок', 'часы', 'крик', 'творчество', 'телевизор', 'инструмент', 'концепция', 'лейтенант', 'экран', 'дно',
#             'реальность', 'канал', 'мясо', 'знакомый', 'щека', 'конфликт', 'переговоры', 'запись', 'вагон', 'площадка',
#             'последствие', 'сотрудничество', 'зеркало', 'тон', 'академия', 'палата', 'потребность', 'ноябрь',
#             'увеличение', 'дурак', 'поездка', 'обед', 'потеря', 'февраль', 'мероприятие', 'парк', 'принятие',
#             'устройство', 'вещество', 'категория', 'сезон', 'гостиница', 'издание', 'объединение', 'темнота',
#             'человечество', 'колесо', 'опасность', 'разрешение', 'воздействие', 'коллектив', 'камера', 'запас',
#             'следствие', 'длина', 'крыло', 'округ', 'фон', 'кандидат', 'родственник', 'давление', 'присутствие',
#             'взаимодействие', 'доска', 'партнер', 'двигатель', 'шум', 'достоинство', 'грех', 'нож', 'полет', 'страсть',
#             'испытание', 'истина', 'оплата', 'разница', 'водитель', 'пакет', 'снижение', 'формула', 'живот', 'капитал',
#             'мост', 'новость', 'эффект', 'вход', 'губернатор', 'доклад', 'смена', 'убийство', 'эксперт', 'автобус',
#             'платье', 'кадр', 'тетя', 'общение', 'психология', 'лев', 'порог', 'проверка', 'процедура', 'рабочий',
#             'ремонт', 'обращение', 'обучение', 'ожидание', 'памятник', 'корень', 'наблюдение', 'буква',
#             'доказательство', 'признание', 'постель', 'штаб', 'владелец', 'компьютер', 'инженер', 'старуха', 'лодка',
#             'ракета', 'серия', 'шутка', 'вершина', 'выпуск', 'кулак', 'лед', 'торговля', 'нефть', 'молодежь', 'цифра',
#             'корпус', 'недостаток', 'сапог', 'сущность', 'талант', 'эффективность', 'кофе', 'полоса', 'основное',
#             'рассмотрение', 'сбор', 'штат', 'следователь', 'жилье', 'мешок', 'описание', 'куст', 'отказ', 'замок',
#             'редактор', 'дворец', 'забота', 'пиво', 'диван', 'столик', 'эксперимент', 'печать', 'кольцо', 'пистолет',
#             'воспитание', 'начальство', 'профессия', 'ворота', 'добро', 'дружба', 'покой', 'риск', 'окончание', 'дым',
#             'брак', 'величина', 'записка', 'инициатива', 'совесть', 'активность', 'кость', 'спорт', 'кредит', 'господь',
#             'майор', 'конференция', 'потолок', 'библиотека', 'помощник', 'конструкция', 'отдых', 'ручка', 'металл',
#             'молоко', 'прокурор', 'транспорт', 'поэзия', 'соединение', 'краска', 'расстояние', 'мечта', 'село', 'еда',
#             'зло', 'подразделение', 'сюжет', 'рубеж', 'сигнал', 'атмосфера', 'крест', 'вес', 'взрыв', 'контакт',
#             'сигарета', 'восторг', 'золото', 'почва', 'премия', 'король', 'подъезд', 'шанс', 'автомат', 'заказ',
#             'мальчишка', 'очки', 'миг', 'штука', 'чтение', 'поселок', 'свидетель', 'ставка', 'сумка', 'удивление',
#             'хвост', 'песок', 'поворот', 'возвращение', 'мгновение', 'статус', 'озеро', 'строй', 'параметр', 'сказка',
#             'тенденция', 'вина', 'дыхание', 'версия', 'масштаб', 'монастырь', 'хозяйка', 'дочка', 'танец',
#             'эксплуатация', 'коммунист', 'пенсия', 'приятель', 'объяснение', 'набор', 'производитель', 'пыль',
#             'философия', 'мощность', 'обязательство', 'уход', 'горло', 'кризис', 'указание', 'плата', 'яблоко',
#             'препарат', 'действительность', 'москвич', 'остаток', 'изображение', 'сделка', 'сочинение',
#             'покупатель', 'танк', 'затрата', 'строка', 'единица', 'человек', 'работа', 'вопрос', 'сторона', 'страна', 'случай', 'голова', 'ребенок', 'система',
#              'отношение', 'женщина', 'деньги', 'машина', 'проблема', 'решение', 'история', 'власть', 'тысяча',
#              'возможность', 'результат', 'область', 'статья', 'компания', 'группа', 'развитие', 'процесс', 'условие',
#              'средство', 'начало', 'уровень', 'минута', 'качество', 'дорога', 'действие', 'государство', 'любовь',
#              'взгляд', 'общество', 'деятельность', 'организация', 'президент', 'комната', 'порядок', 'момент',
#              'письмо', 'помощь', 'ситуация', 'состояние', 'квартира', 'внимание', 'смерть', 'программа', 'задача',
#              'предприятие', 'разговор', 'правительство', 'производство', 'информация', 'положение', 'интерес',
#              'федерация', 'правило', 'управление', 'мужчина', 'партия', 'сердце', 'движение', 'материал', 'неделя',
#              'чувство', 'газета', 'причина', 'основа', 'товарищ', 'культура', 'данные', 'мнение', 'документ',
#              'институт', 'проект', 'встреча', 'директор', 'служба', 'судьба', 'девушка', 'очередь', 'состав',
#              'количество', 'событие', 'объект', 'создание', 'значение', 'период', 'искусство', 'структура', 'пример',
#              'исследование', 'гражданин', 'начальник', 'принцип', 'воздух', 'характер', 'борьба', 'использование',
#              'размер', 'образование', 'мальчик', 'представитель', 'участие', 'девочка', 'политика', 'картина', 'доллар',
#              'территория', 'изменение', 'направление', 'рисунок', 'течение', 'церковь', 'население', 'большинство',
#              'музыка', 'правда', 'свобода', 'память', 'команда', 'договор', 'дерево', 'хозяин', 'природа', 'телефон',
#              'позиция', 'писатель', 'самолет', 'солнце', 'спектакль', 'способ', 'журнал', 'руководитель', 'специалист',
#              'оценка', 'регион', 'процент', 'родитель', 'требование', 'основание', 'половина', 'анализ', 'автомобиль',
#              'экономика', 'литература', 'бумага', 'степень', 'господин', 'надежда', 'предмет', 'вариант', 'министр',
#              'граница', 'модель', 'операция', 'название', 'старик', 'миллион', 'счастье', 'ребята', 'кабинет',
#              'магазин', 'пространство', 'знание', 'защита', 'руководство', 'площадь', 'сознание', 'возраст', 'участник',
#              'участок', 'желание', 'доктор', 'председатель', 'представление', 'солдат', 'художник', 'оружие',
#              'соответствие', 'парень', 'зрение', 'генерал', 'понятие', 'строительство', 'услуга', 'содержание',
#              'радость', 'безопасность', 'продукт', 'комплекс', 'бизнес', 'сотрудник', 'предложение', 'технология',
#              'реформа', 'отсутствие', 'собака', 'камень', 'будущее', 'рассказ', 'контроль', 'продукция', 'техника',
#              'здание', 'необходимость', 'подготовка', 'республика', 'хозяйство', 'бюджет', 'деревня', 'элемент',
#              'обстоятельство', 'победа', 'источник', 'звезда', 'сестра', 'практика', 'проведение', 'карман',
#              'определение', 'функция', 'войско', 'комиссия', 'применение', 'капитан', 'работник', 'обеспечение',
#              'офицер', 'фамилия', 'предел', 'выборы', 'ученый', 'бутылка', 'теория', 'разработка', 'личность',
#              'праздник', 'влияние', 'читатель', 'удовольствие', 'ответственность', 'учитель', 'множество',
#              'особенность', 'показатель', 'корабль', 'впечатление', 'частность', 'детство', 'профессор', 'прошлое',
#              'командир', 'коридор', 'поддержка', 'собрание', 'болезнь', 'клетка', 'заявление', 'попытка', 'сравнение',
#              'расчет', 'депутат', 'комитет', 'выражение', 'здоровье', 'десяток', 'глубина', 'студент', 'секунда',
#              'скорость', 'ошибка', 'режиссер', 'поверхность', 'ощущение', 'станция', 'революция', 'колено',
#              'министерство', 'стекло', 'высота', 'бабушка', 'трубка', 'мастер', 'поведение', 'столица', 'механизм',
#              'передача', 'способность', 'подход', 'энергия', 'существование', 'исполнение', 'сожаление', 'заместитель',
#              'ресурс', 'рождение', 'администрация', 'стоимость', 'улыбка', 'артист', 'фигура', 'субъект', 'реакция',
#              'список', 'фотография', 'журналист', 'нарушение', 'заседание', 'больница', 'существо', 'свойство',
#              'поколение', 'животное', 'усилие', 'отличие', 'остров', 'противник', 'реализация', 'страница',
#              'формирование', 'житель', 'красота', 'растение', 'явление', 'наличие', 'одежда', 'кресло', 'больной',
#              'университет', 'традиция', 'декабрь', 'ладонь', 'сведение', 'цветок', 'октябрь', 'занятие', 'сентябрь',
#              'помещение', 'январь', 'зритель', 'редакция', 'фактор', 'август', 'известие', 'зависимость', 'охрана',
#              'оборудование', 'концерт', 'отделение', 'расход', 'выставка', 'милиция', 'переход', 'произведение',
#              'родина', 'собственность', 'лагерь', 'имущество', 'кровать', 'аппарат', 'середина', 'клиент', 'отрасль',
#              'беседа', 'законодательство', 'продажа', 'повышение', 'полковник', 'сомнение', 'понимание', 'апрель',
#              'кодекс', 'настроение', 'должность', 'преступление', 'лестница', 'установка', 'появление', 'получение',
#              'образец', 'главное', 'костюм', 'ценность', 'обязанность', 'таблица', 'воспоминание', 'лошадь', 'коллега',
#              'организм', 'ученик', 'учреждение', 'открытие', 'характеристика', 'выполнение', 'оборона', 'выступление',
#              'температура', 'перспектива', 'подруга', 'приказ', 'жертва', 'ресторан', 'километр', 'признак',
#              'промышленность', 'американец', 'заключение', 'восток', 'исключение', 'постановление', 'перевод',
#              'секретарь', 'польза', 'звонок', 'обстановка', 'чиновник', 'соглашение', 'деталь', 'русский', 'тишина',
#              'зарплата', 'подарок', 'тюрьма', 'конкурс', 'книжка', 'изучение', 'просьба', 'публика', 'сообщение',
#              'угроза', 'достижение', 'назначение', 'реклама', 'портрет', 'стакан', 'творчество', 'телевизор',
#              'инструмент', 'концепция', 'лейтенант', 'реальность', 'знакомый', 'конфликт', 'переговоры', 'запись',
#              'площадка', 'последствие', 'сотрудничество', 'зеркало', 'академия', 'палата', 'потребность', 'ноябрь',
#              'увеличение', 'поездка', 'потеря', 'февраль', 'мероприятие', 'принятие', 'устройство', 'вещество',
#              'категория', 'гостиница', 'издание', 'объединение', 'темнота', 'человечество', 'колесо', 'опасность',
#              'разрешение', 'воздействие', 'коллектив', 'камера', 'следствие', 'кандидат', 'родственник', 'давление',
#              'присутствие', 'взаимодействие', 'партнер', 'двигатель', 'достоинство', 'страсть', 'испытание', 'оплата',
#              'разница', 'водитель', 'снижение', 'формула', 'капитал', 'новость', 'эффект', 'губернатор', 'доклад',
#              'убийство', 'эксперт', 'автобус', 'платье', 'общение', 'психология', 'проверка', 'процедура', 'рабочий',
#              'ремонт', 'обращение', 'обучение', 'ожидание', 'памятник', 'корень', 'наблюдение', 'доказательство',
#              'признание', 'постель', 'владелец', 'компьютер', 'инженер', 'старуха', 'ракета', 'вершина', 'выпуск',
#              'торговля', 'молодежь', 'корпус', 'недостаток', 'сущность', 'талант', 'эффективность', 'полоса',
#              'основное', 'рассмотрение', 'следователь', 'описание', 'редактор', 'дворец', 'забота', 'столик',
#              'эксперимент', 'печать', 'кольцо', 'пистолет', 'воспитание', 'начальство', 'профессия', 'ворота', 'дружба',
#              'окончание', 'величина', 'записка', 'инициатива', 'совесть', 'активность', 'кредит', 'господь',
#              'конференция', 'потолок', 'библиотека', 'помощник', 'конструкция', 'металл', 'молоко', 'прокурор',
#              'транспорт', 'поэзия', 'соединение', 'краска', 'расстояние', 'подразделение', 'сигнал', 'атмосфера',
#              'контакт', 'сигарета', 'восторг', 'золото', 'премия', 'король', 'подъезд', 'автомат', 'мальчишка',
#              'чтение', 'поселок', 'свидетель', 'ставка', 'удивление', 'поворот', 'возвращение', 'мгновение', 'статус',
#              'параметр', 'сказка', 'тенденция', 'дыхание', 'версия', 'масштаб', 'монастырь', 'хозяйка', 'эксплуатация',
#              'коммунист', 'пенсия', 'приятель', 'объяснение', 'производитель', 'философия', 'мощность', 'обязательство',
#              'кризис', 'указание', 'яблоко', 'препарат', 'действительность', 'москвич', 'остаток', 'изображение',
#              'сделка', 'сочинение', 'покупатель', 'затрата', 'строка', 'единица', 'обработка', 'чемпионат']
#
# def get_word():
#     word = random.choice(word_list)
#     return word.upper()
#
#
# # функция получения текущего состояния
# def display_hangman(tries):
#     stages = [  # финальное состояние: голова, торс, обе руки, обе ноги
#                 '''
#                    --------
#                    |      |
#                    |      O
#                    |     \\|/
#                    |      |
#                    |     / \\
#                    - ТОБІ Піз...
#                 ''',
#                 # голова, торс, обе руки, одна нога
#                 '''
#                    --------
#                    |      |
#                    |      O
#                    |     \\|/
#                    |      |
#                    |     /
#                    - ТІКАЙ З ГОРОДУ!
#                 ''',
#                 # голова, торс, обе руки
#                 '''
#                    --------
#                    |      |
#                    |      O
#                    |     \\|/
#                    |      |
#                    |
#                    - СКОРО
#                 ''',
#                 # голова, торс и одна рука
#                 '''
#                    --------
#                    |      |
#                    |      O
#                    |     \\|
#                    |      |
#                    |
#                    -
#                 ''',
#                 # голова и торс
#                 '''
#                    --------
#                    |      |
#                    |      O
#                    |      |
#                    |      |
#                    |
#                    -
#                 ''',
#                 # голова
#                 '''
#                    --------
#                    |      |
#                    |      O
#                    |
#                    |
#                    |
#                    -
#                 ''',
#                 # начальное состояние
#                 '''
#                    --------
#                    |      |
#                    |
#                    |
#                    |
#                    |
#                    -
#                 '''
#     ]
#     return stages[tries]
#
#
# def play():
#     print('Давайте играть в угадайку слов - в Виселицу!')
#     print('У тебя шесть попыток:')
#     tries = 6
#     print(display_hangman(tries))
#     word = get_word()
#     word_completion = ['_'] * len(word)  # строка, содержащая символы _ на каждую букву задуманного слова
#     print(f'Длина слова, которое ты должен угадать: {"".join(word_completion)}')
#     guessed = False
#     user_letters = []
#
#
#     while not guessed and tries > 0:
#         s = input('Назови букву или слово целиком\n').upper()
#         if s.isalpha():
#             if len(s) == 1:
#                 if s in user_letters:
#                     print('Вы уже называли букву', s)
#                 if s not in word:
#                     print('Буквы', s, 'нет в слове.')
#                     if s not in user_letters:
#                         user_letters.append(s)
#                         tries -= 1
#                         if tries < 6:
#                             print('Буквы, которые называли:', *user_letters)
#                             print(f'Длина слова, которое ты должен угадать: {"".join(word_completion)}')
#                     else:
#                         continue
#                     print(display_hangman(tries))
#                 if s in word:
#                     print(f'Молодчина! Буква {s} есть в загаданном слове!')
#                     print()
#                     for i in range(len(word_completion)):
#                         if word[i] == s:
#                             word_completion[i] = word[i]
#                             user_letters.append(s)
#                             if '_' not in word_completion:
#                                 print('Подздравляю! Тебе удалось избежать виселицы!')
#                                 print(f'Загаданное слово: {word}')
#                                 guessed = True
#                             else:
#                                 print(f'Длина слова, которое ты должен угадать: {"".join(word_completion)}')
#                                 print()
#                                 print('Буквы, которые называли:', *user_letters)
#                                 print()
#             elif len(s) == len(word):
#                 if s == word:
#                     print('Подздравляю! Тебе удалось избежать виселицы!')
#                     print(f'Загаданное слово: {word}')
#                     guessed = True
#                 elif s != word:
#                     tries = 0
#                     print(display_hangman(0))
#             else:
#                 print('Указаны некорректные данные - не буква и не слово!')
#                 print(f'Длина слова, которое ты должен угадать: {"".join(word_completion)}')
#                 guessed = False
#     if tries < 1:
#         print('Вас повесили. Еще долго в воздухе ощущался запах поражения...')
#         print(f'Загаданное слово: {word}')
#
#
# play()
#
# q = input('Сыграем еще? +/-')
# if q == '+':
#     play()
# else:
#     print('Приходит к нам снова!')

# from simple_colors import *
# n = 'qwerty'
# print(yellow(n))
# print(red(n))
# print(green(n))
# print(blue(n))
# print(magenta(n))
# print(cyan(n))


# print(green('hello'))
# print(green('hello', 'bold'))
# print(green('hello', ['bold', 'underlined']))